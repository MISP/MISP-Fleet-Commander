services:
    backend:
        build: 
            context: backend
            dockerfile: docker/Dockerfile
        working_dir: /app
        environment:
            - FLASK_APP=wsgi.py
            - FLASK_DEBUG=0
            - FLASK_ENV=production
            - FLASK_CONFIG=config.ProductionConfig
            - SQLALCHEMY_DATABASE_URI=/app/database/database.db
            - SQLALCHEMY_TRACK_MODIFICATIONS=1
            - SECRET_KEY=secret
            - TOKEN_EXPIRATION_MIN=30
            - TOKEN_EXPIRATION_DAYS=365
            - AUTHLIB_INSECURE_TRANSPORT=true
            - REDIS_URL=redis
            - REDIS_PORT=6379
            - REDIS_DB=1
            - SOCKETIO_MESSAGE_QUEUE=redis://redis:6379/3
            - WORKER_BROKER_URL=redis://redis
            - WORKER_RESULT_BACKEND=redis://redis
        volumes:
            - "./run:/app/database"
            - "./run/data:/app/data"
        ports:
            - "5001:5001"
        command: flask run --port=5001 --host=0.0.0.0
        depends_on:
            - redis

    workers:
        build: 
            context: backend
            dockerfile: docker/Dockerfile
        working_dir: /app
        environment:
            - FLASK_ENV=production
            - FLASK_CONFIG=config.ProductionConfig
            - SQLALCHEMY_DATABASE_URI=/app/database/database.db
            - SQLALCHEMY_TRACK_MODIFICATIONS=1
            - REDIS_URL=redis
            - REDIS_PORT=6379
            - REDIS_DB=1
            - SOCKETIO_MESSAGE_QUEUE=redis://redis:6379/3
            - WORKER_BROKER_URL=redis://redis
            - WORKER_RESULT_BACKEND=redis://redis
        volumes:
            - "./run:/app/database"
        command: bash start_workers.sh
        depends_on:
            - redis
            - backend

    redis:
        image: redis:7-alpine
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
